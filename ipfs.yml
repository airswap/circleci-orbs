version: 2.1

description: |
  Deploy to IPFS and update the domain name record in AWS

commands:
  deployAndUpdateDNS:
    description: |
      Deploy the passed  in directory to IPFS, pin to Pinata, and update Route 53

    parameters:
      directory:
        description: The directory to deploy to IPFS
        type: string
        default: public

      pinataApiKey:
        description: The Pinata API key
        default: $PINATA_API_KEY
        type: string

      pinataSecret:
        description: The Pinata secret
        default: $PINATA_SECRET
        type: string

      dnsRecord:
        description: The DNS record to be updated
        default: ""
        type: string

      gateway:
        description: The gateway value for the DNS record
        default: "www.cloudflare-ipfs.com"
        type: string

      zoneId:
        description: The Route 53 zone ID
        default: ""
        type: string

    steps:
      - run:
          name: Add to IPFS
          command: |
            PIN_NAME="<< parameters.dnsRecord >> public $CIRCLE_BUILD_NUM"

            export IPFS_DEPLOY_PINATA__API_KEY="<< parameters.pinataApiKey >>"
            export IPFS_DEPLOY_PINATA__SECRET_API_KEY="<< parameters.pinataSecret >>"

            export HASH=$(npx ipfs-deploy -p pinata << parameters.directory >>)
            echo "export IPFS_HASH=$HASH" >> $BASH_ENV
      - run:
          name: Update DNS record
          command: |
            echo $IPFS_HASH
            CHANGE_SET_CNAME="{  \"Changes\": [{ \"Action\": \"UPSERT\", \"ResourceRecordSet\": { \"Name\": \"<< parameters.dnsRecord >>.\", \"Type\": \"CNAME\", \"TTL\": 300, \"ResourceRecords\": [{ \"Value\": \"<< parameters.gateway >>\" }]}}]}"
            CHANGE_SET_DNSLINK="{  \"Changes\": [{ \"Action\": \"UPSERT\", \"ResourceRecordSet\": { \"Name\": \"_dnslink.<< parameters.dnsRecord >>.\", \"Type\": \"TXT\", \"TTL\": 60, \"ResourceRecords\": [{ \"Value\": \"\\\"dnslink=/ipfs/${IPFS_HASH}\\\"\" }]}}]}"
            aws route53 change-resource-record-sets --hosted-zone-id << parameters.zoneId >> --change-batch "$CHANGE_SET_DNSLINK"
            aws route53 change-resource-record-sets --hosted-zone-id << parameters.zoneId >> --change-batch "$CHANGE_SET_CNAME"
