version: 2.1

description: |
  Install the AWS CLI and assume the passed in role
  based on passed in environment variables

executors:
  default:
    description: |
      The Node-based Docker container to use when
      installing/configuring the AWS CLI

    parameters:
      node-version:
        type: string
        default: "8"

    docker:
      - image: circleci/node:<< parameters.node-version >>

commands:
  assume-role:
    description: |
      Assume the role in the account passed in

    parameters:
      profile-name:
        description: Profile name to be configured.
        type: string
        default: "default"

      aws-access-key-id:
        description: |
          AWS access key id for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. $AWS_ACCESS_KEY.
        type: string
        default: $AWS_ACCESS_KEY_ID

      aws-secret-access-key:
        description: |
          AWS secret key for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. $AWS_SECRET_ACCESS_KEY.
        type: string
        default: $AWS_SECRET_ACCESS_KEY

      aws-region:
        description: |
          AWS region to operate in
          (defaults to the value of $AWS_REGION)
        type: string
        default: $AWS_REGION

      account-id:
        description: |
          The AWS account id without dashes (just numbers)
          (defaults to the value of $ACCOUNT_ID)
        type: string
        default: $ACCOUNT_ID

      role-name:
        description: |
          The role's name (not ARN)
          (defaults to the value of $ROLE_NAME)
        type: string
        default: $ROLE_NAME

    steps:
      - run:
          name: Setup and export the ROLE_ARN
          command: echo "export ROLE_ARN=arn:aws:iam::<< parameters.account-id >>:role/<< parameters.role-name >>" >> $BASH_ENV
      - run:
          name: Assume role and export environment variables
          command: |
            CREDENTIALS="$(aws sts assume-role --role-arn $ROLE_ARN --role-session-name build-$CIRCLE_PROJECT_REPONAME-$CIRCLE_BUILD_NUM | jq '.Credentials')"
            echo "export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r '.AccessKeyId')" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r '.SecretAccessKey')" >> $BASH_ENV
            echo "export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r '.SessionToken')" >> $BASH_ENV
